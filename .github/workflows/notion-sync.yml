name: Sync GitHub Activity to Notion

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, closed, reopened, edited]
  workflow_dispatch:

jobs:
  sync-to-notion:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get commit information
        if: github.event_name == 'push'
        id: commit_info
        run: |
          COMMIT_SHA="${{ github.sha }}"
          COMMIT_SHORT_SHA=$(echo $COMMIT_SHA | cut -c1-7)
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          COMMIT_AUTHOR=$(git log -1 --pretty=%an)
          COMMIT_DATE=$(git log -1 --pretty=%cI)
          COMMIT_URL="${{ github.event.repository.html_url }}/commit/$COMMIT_SHA"
          BRANCH_NAME="${{ github.ref_name }}"
          
          # Get stats
          FILES_CHANGED=$(git diff-tree --no-commit-id --name-only -r $COMMIT_SHA | wc -l)
          ADDITIONS=$(git show --shortstat $COMMIT_SHA | grep -oP '\d+(?= insertion)' || echo "0")
          DELETIONS=$(git show --shortstat $COMMIT_SHA | grep -oP '\d+(?= deletion)' || echo "0")
          
          echo "sha=$COMMIT_SHORT_SHA" >> $GITHUB_OUTPUT
          echo "message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "author=$COMMIT_AUTHOR" >> $GITHUB_OUTPUT
          echo "date=$COMMIT_DATE" >> $GITHUB_OUTPUT
          echo "url=$COMMIT_URL" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "files=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "additions=$ADDITIONS" >> $GITHUB_OUTPUT
          echo "deletions=$DELETIONS" >> $GITHUB_OUTPUT

      - name: Get PR information
        if: github.event_name == 'pull_request'
        id: pr_info
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_DATE="${{ github.event.pull_request.created_at }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          PR_BRANCH="${{ github.event.pull_request.head.ref }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_STATE="${{ github.event.pull_request.state }}"
          PR_MERGED="${{ github.event.pull_request.merged }}"
          FILES_CHANGED="${{ github.event.pull_request.changed_files }}"
          ADDITIONS="${{ github.event.pull_request.additions }}"
          DELETIONS="${{ github.event.pull_request.deletions }}"
          
          # Determine status
          if [ "$PR_MERGED" == "true" ]; then
            STATUS="Merged"
          elif [ "$PR_STATE" == "closed" ]; then
            STATUS="Closed"
          else
            STATUS="Open"
          fi
          
          echo "title=$PR_TITLE" >> $GITHUB_OUTPUT
          echo "author=$PR_AUTHOR" >> $GITHUB_OUTPUT
          echo "date=$PR_DATE" >> $GITHUB_OUTPUT
          echo "url=$PR_URL" >> $GITHUB_OUTPUT
          echo "branch=$PR_BRANCH" >> $GITHUB_OUTPUT
          echo "body=$PR_BODY" >> $GITHUB_OUTPUT
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "files=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "additions=$ADDITIONS" >> $GITHUB_OUTPUT
          echo "deletions=$DELETIONS" >> $GITHUB_OUTPUT

      - name: Send Commit to Notion
        if: github.event_name == 'push'
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          curl -X POST https://api.notion.com/v1/pages \
            -H "Authorization: Bearer $NOTION_TOKEN" \
            -H "Content-Type: application/json" \
            -H "Notion-Version: 2022-06-28" \
            -d '{
              "parent": { "database_id": "'"$NOTION_DATABASE_ID"'" },
              "properties": {
                "Activity": {
                  "title": [
                    {
                      "text": {
                        "content": "'"${{ steps.commit_info.outputs.message }}"'"
                      }
                    }
                  ]
                },
                "Type": {
                  "select": {
                    "name": "Commit"
                  }
                },
                "Repository": {
                  "rich_text": [
                    {
                      "text": {
                        "content": "'"${{ github.repository }}"'"
                      }
                    }
                  ]
                },
                "Author": {
                  "rich_text": [
                    {
                      "text": {
                        "content": "'"${{ steps.commit_info.outputs.author }}"'"
                      }
                    }
                  ]
                },
                "Date": {
                  "date": {
                    "start": "'"${{ steps.commit_info.outputs.date }}"'"
                  }
                },
                "URL": {
                  "url": "'"${{ steps.commit_info.outputs.url }}"'"
                },
                "Branch": {
                  "rich_text": [
                    {
                      "text": {
                        "content": "'"${{ steps.commit_info.outputs.branch }}"'"
                      }
                    }
                  ]
                },
                "Status": {
                  "select": {
                    "name": "Completed"
                  }
                },
                "SHA": {
                  "rich_text": [
                    {
                      "text": {
                        "content": "'"${{ steps.commit_info.outputs.sha }}"'"
                      }
                    }
                  ]
                },
                "Files Changed": {
                  "number": '"${{ steps.commit_info.outputs.files }}"'
                },
                "Additions": {
                  "number": '"${{ steps.commit_info.outputs.additions }}"'
                },
                "Deletions": {
                  "number": '"${{ steps.commit_info.outputs.deletions }}"'
                }
              }
            }'

      - name: Send PR to Notion
        if: github.event_name == 'pull_request'
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          curl -X POST https://api.notion.com/v1/pages \
            -H "Authorization: Bearer $NOTION_TOKEN" \
            -H "Content-Type: application/json" \
            -H "Notion-Version: 2022-06-28" \
            -d '{
              "parent": { "database_id": "'"$NOTION_DATABASE_ID"'" },
              "properties": {
                "Activity": {
                  "title": [
                    {
                      "text": {
                        "content": "'"${{ steps.pr_info.outputs.title }}"'"
                      }
                    }
                  ]
                },
                "Type": {
                  "select": {
                    "name": "Pull Request"
                  }
                },
                "Repository": {
                  "rich_text": [
                    {
                      "text": {
                        "content": "'"${{ github.repository }}"'"
                      }
                    }
                  ]
                },
                "Author": {
                  "rich_text": [
                    {
                      "text": {
                        "content": "'"${{ steps.pr_info.outputs.author }}"'"
                      }
                    }
                  ]
                },
                "Date": {
                  "date": {
                    "start": "'"${{ steps.pr_info.outputs.date }}"'"
                  }
                },
                "URL": {
                  "url": "'"${{ steps.pr_info.outputs.url }}"'"
                },
                "Branch": {
                  "rich_text": [
                    {
                      "text": {
                        "content": "'"${{ steps.pr_info.outputs.branch }}"'"
                      }
                    }
                  ]
                },
                "Status": {
                  "select": {
                    "name": "'"${{ steps.pr_info.outputs.status }}"'"
                  }
                },
                "Description": {
                  "rich_text": [
                    {
                      "text": {
                        "content": "'"${{ steps.pr_info.outputs.body }}"'"
                      }
                    }
                  ]
                },
                "Files Changed": {
                  "number": '"${{ steps.pr_info.outputs.files }}"'
                },
                "Additions": {
                  "number": '"${{ steps.pr_info.outputs.additions }}"'
                },
                "Deletions": {
                  "number": '"${{ steps.pr_info.outputs.deletions }}"'
                }
              }
            }'

      - name: Workflow completed
        run: |
          echo "âœ… Activity synced to Notion successfully!"
